// Generated from java-escape by ANTLR 4.11.1
package io.github.mosser.arduinoml.externals.antlr.grammar;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue"})
public class ArduinomlLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.11.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, PORT_NUMBER=15, INTEGER=16, 
		IDENTIFIER=17, SIGNAL=18, OPERATOR=19, NEWLINE=20, WS=21, COMMENT=22;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
			"T__9", "T__10", "T__11", "T__12", "T__13", "PORT_NUMBER", "INTEGER", 
			"IDENTIFIER", "SIGNAL", "OPERATOR", "LOWERCASE", "UPPERCASE", "DIGITS", 
			"NEWLINE", "WS", "COMMENT"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'application'", "'sensor'", "'actuator'", "':'", "'{'", "'}'", 
			"'<='", "'=>'", "'->'", "'('", "')'", "'is'", "'after'", "'ms'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, "PORT_NUMBER", "INTEGER", "IDENTIFIER", "SIGNAL", "OPERATOR", 
			"NEWLINE", "WS", "COMMENT"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public ArduinomlLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Arduinoml.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\u0016\u00b5\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002"+
		"\u0001\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002"+
		"\u0004\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002"+
		"\u0007\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002"+
		"\u000b\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e"+
		"\u0002\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011"+
		"\u0002\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014"+
		"\u0002\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017"+
		"\u0002\u0018\u0007\u0018\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000"+
		"\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000"+
		"\u0001\u0000\u0001\u0000\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0002\u0001\u0002\u0001\u0002"+
		"\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002"+
		"\u0001\u0003\u0001\u0003\u0001\u0004\u0001\u0004\u0001\u0005\u0001\u0005"+
		"\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0007\u0001\u0007\u0001\u0007"+
		"\u0001\b\u0001\b\u0001\b\u0001\t\u0001\t\u0001\n\u0001\n\u0001\u000b\u0001"+
		"\u000b\u0001\u000b\u0001\f\u0001\f\u0001\f\u0001\f\u0001\f\u0001\f\u0001"+
		"\r\u0001\r\u0001\r\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000e\u0001"+
		"\u000e\u0001\u000e\u0001\u000e\u0003\u000ev\b\u000e\u0001\u000f\u0004"+
		"\u000fy\b\u000f\u000b\u000f\f\u000fz\u0001\u0010\u0001\u0010\u0001\u0010"+
		"\u0001\u0010\u0004\u0010\u0081\b\u0010\u000b\u0010\f\u0010\u0082\u0001"+
		"\u0011\u0001\u0011\u0001\u0011\u0001\u0011\u0001\u0011\u0001\u0011\u0001"+
		"\u0011\u0003\u0011\u008c\b\u0011\u0001\u0012\u0001\u0012\u0001\u0012\u0001"+
		"\u0012\u0001\u0012\u0003\u0012\u0093\b\u0012\u0001\u0013\u0001\u0013\u0001"+
		"\u0014\u0001\u0014\u0001\u0015\u0001\u0015\u0001\u0016\u0003\u0016\u009c"+
		"\b\u0016\u0001\u0016\u0001\u0016\u0004\u0016\u00a0\b\u0016\u000b\u0016"+
		"\f\u0016\u00a1\u0001\u0016\u0001\u0016\u0001\u0017\u0004\u0017\u00a7\b"+
		"\u0017\u000b\u0017\f\u0017\u00a8\u0001\u0017\u0001\u0017\u0001\u0018\u0001"+
		"\u0018\u0005\u0018\u00af\b\u0018\n\u0018\f\u0018\u00b2\t\u0018\u0001\u0018"+
		"\u0001\u0018\u0000\u0000\u0019\u0001\u0001\u0003\u0002\u0005\u0003\u0007"+
		"\u0004\t\u0005\u000b\u0006\r\u0007\u000f\b\u0011\t\u0013\n\u0015\u000b"+
		"\u0017\f\u0019\r\u001b\u000e\u001d\u000f\u001f\u0010!\u0011#\u0012%\u0013"+
		"\'\u0000)\u0000+\u0000-\u0014/\u00151\u0016\u0001\u0000\u0006\u0001\u0000"+
		"19\u0001\u000009\u0001\u0000az\u0001\u0000AZ\u0002\u0000\t\t  \u0002\u0000"+
		"\n\n\r\r\u00bf\u0000\u0001\u0001\u0000\u0000\u0000\u0000\u0003\u0001\u0000"+
		"\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0000\u0000\u0007\u0001\u0000"+
		"\u0000\u0000\u0000\t\u0001\u0000\u0000\u0000\u0000\u000b\u0001\u0000\u0000"+
		"\u0000\u0000\r\u0001\u0000\u0000\u0000\u0000\u000f\u0001\u0000\u0000\u0000"+
		"\u0000\u0011\u0001\u0000\u0000\u0000\u0000\u0013\u0001\u0000\u0000\u0000"+
		"\u0000\u0015\u0001\u0000\u0000\u0000\u0000\u0017\u0001\u0000\u0000\u0000"+
		"\u0000\u0019\u0001\u0000\u0000\u0000\u0000\u001b\u0001\u0000\u0000\u0000"+
		"\u0000\u001d\u0001\u0000\u0000\u0000\u0000\u001f\u0001\u0000\u0000\u0000"+
		"\u0000!\u0001\u0000\u0000\u0000\u0000#\u0001\u0000\u0000\u0000\u0000%"+
		"\u0001\u0000\u0000\u0000\u0000-\u0001\u0000\u0000\u0000\u0000/\u0001\u0000"+
		"\u0000\u0000\u00001\u0001\u0000\u0000\u0000\u00013\u0001\u0000\u0000\u0000"+
		"\u0003?\u0001\u0000\u0000\u0000\u0005F\u0001\u0000\u0000\u0000\u0007O"+
		"\u0001\u0000\u0000\u0000\tQ\u0001\u0000\u0000\u0000\u000bS\u0001\u0000"+
		"\u0000\u0000\rU\u0001\u0000\u0000\u0000\u000fX\u0001\u0000\u0000\u0000"+
		"\u0011[\u0001\u0000\u0000\u0000\u0013^\u0001\u0000\u0000\u0000\u0015`"+
		"\u0001\u0000\u0000\u0000\u0017b\u0001\u0000\u0000\u0000\u0019e\u0001\u0000"+
		"\u0000\u0000\u001bk\u0001\u0000\u0000\u0000\u001du\u0001\u0000\u0000\u0000"+
		"\u001fx\u0001\u0000\u0000\u0000!|\u0001\u0000\u0000\u0000#\u008b\u0001"+
		"\u0000\u0000\u0000%\u0092\u0001\u0000\u0000\u0000\'\u0094\u0001\u0000"+
		"\u0000\u0000)\u0096\u0001\u0000\u0000\u0000+\u0098\u0001\u0000\u0000\u0000"+
		"-\u009f\u0001\u0000\u0000\u0000/\u00a6\u0001\u0000\u0000\u00001\u00ac"+
		"\u0001\u0000\u0000\u000034\u0005a\u0000\u000045\u0005p\u0000\u000056\u0005"+
		"p\u0000\u000067\u0005l\u0000\u000078\u0005i\u0000\u000089\u0005c\u0000"+
		"\u00009:\u0005a\u0000\u0000:;\u0005t\u0000\u0000;<\u0005i\u0000\u0000"+
		"<=\u0005o\u0000\u0000=>\u0005n\u0000\u0000>\u0002\u0001\u0000\u0000\u0000"+
		"?@\u0005s\u0000\u0000@A\u0005e\u0000\u0000AB\u0005n\u0000\u0000BC\u0005"+
		"s\u0000\u0000CD\u0005o\u0000\u0000DE\u0005r\u0000\u0000E\u0004\u0001\u0000"+
		"\u0000\u0000FG\u0005a\u0000\u0000GH\u0005c\u0000\u0000HI\u0005t\u0000"+
		"\u0000IJ\u0005u\u0000\u0000JK\u0005a\u0000\u0000KL\u0005t\u0000\u0000"+
		"LM\u0005o\u0000\u0000MN\u0005r\u0000\u0000N\u0006\u0001\u0000\u0000\u0000"+
		"OP\u0005:\u0000\u0000P\b\u0001\u0000\u0000\u0000QR\u0005{\u0000\u0000"+
		"R\n\u0001\u0000\u0000\u0000ST\u0005}\u0000\u0000T\f\u0001\u0000\u0000"+
		"\u0000UV\u0005<\u0000\u0000VW\u0005=\u0000\u0000W\u000e\u0001\u0000\u0000"+
		"\u0000XY\u0005=\u0000\u0000YZ\u0005>\u0000\u0000Z\u0010\u0001\u0000\u0000"+
		"\u0000[\\\u0005-\u0000\u0000\\]\u0005>\u0000\u0000]\u0012\u0001\u0000"+
		"\u0000\u0000^_\u0005(\u0000\u0000_\u0014\u0001\u0000\u0000\u0000`a\u0005"+
		")\u0000\u0000a\u0016\u0001\u0000\u0000\u0000bc\u0005i\u0000\u0000cd\u0005"+
		"s\u0000\u0000d\u0018\u0001\u0000\u0000\u0000ef\u0005a\u0000\u0000fg\u0005"+
		"f\u0000\u0000gh\u0005t\u0000\u0000hi\u0005e\u0000\u0000ij\u0005r\u0000"+
		"\u0000j\u001a\u0001\u0000\u0000\u0000kl\u0005m\u0000\u0000lm\u0005s\u0000"+
		"\u0000m\u001c\u0001\u0000\u0000\u0000nv\u0007\u0000\u0000\u0000op\u0005"+
		"1\u0000\u0000pv\u00050\u0000\u0000qr\u00051\u0000\u0000rv\u00051\u0000"+
		"\u0000st\u00051\u0000\u0000tv\u00052\u0000\u0000un\u0001\u0000\u0000\u0000"+
		"uo\u0001\u0000\u0000\u0000uq\u0001\u0000\u0000\u0000us\u0001\u0000\u0000"+
		"\u0000v\u001e\u0001\u0000\u0000\u0000wy\u0007\u0001\u0000\u0000xw\u0001"+
		"\u0000\u0000\u0000yz\u0001\u0000\u0000\u0000zx\u0001\u0000\u0000\u0000"+
		"z{\u0001\u0000\u0000\u0000{ \u0001\u0000\u0000\u0000|\u0080\u0003\'\u0013"+
		"\u0000}\u0081\u0003\'\u0013\u0000~\u0081\u0003)\u0014\u0000\u007f\u0081"+
		"\u0003+\u0015\u0000\u0080}\u0001\u0000\u0000\u0000\u0080~\u0001\u0000"+
		"\u0000\u0000\u0080\u007f\u0001\u0000\u0000\u0000\u0081\u0082\u0001\u0000"+
		"\u0000\u0000\u0082\u0080\u0001\u0000\u0000\u0000\u0082\u0083\u0001\u0000"+
		"\u0000\u0000\u0083\"\u0001\u0000\u0000\u0000\u0084\u0085\u0005H\u0000"+
		"\u0000\u0085\u0086\u0005I\u0000\u0000\u0086\u0087\u0005G\u0000\u0000\u0087"+
		"\u008c\u0005H\u0000\u0000\u0088\u0089\u0005L\u0000\u0000\u0089\u008a\u0005"+
		"O\u0000\u0000\u008a\u008c\u0005W\u0000\u0000\u008b\u0084\u0001\u0000\u0000"+
		"\u0000\u008b\u0088\u0001\u0000\u0000\u0000\u008c$\u0001\u0000\u0000\u0000"+
		"\u008d\u008e\u0005A\u0000\u0000\u008e\u008f\u0005N\u0000\u0000\u008f\u0093"+
		"\u0005D\u0000\u0000\u0090\u0091\u0005O\u0000\u0000\u0091\u0093\u0005R"+
		"\u0000\u0000\u0092\u008d\u0001\u0000\u0000\u0000\u0092\u0090\u0001\u0000"+
		"\u0000\u0000\u0093&\u0001\u0000\u0000\u0000\u0094\u0095\u0007\u0002\u0000"+
		"\u0000\u0095(\u0001\u0000\u0000\u0000\u0096\u0097\u0007\u0003\u0000\u0000"+
		"\u0097*\u0001\u0000\u0000\u0000\u0098\u0099\u0007\u0001\u0000\u0000\u0099"+
		",\u0001\u0000\u0000\u0000\u009a\u009c\u0005\r\u0000\u0000\u009b\u009a"+
		"\u0001\u0000\u0000\u0000\u009b\u009c\u0001\u0000\u0000\u0000\u009c\u009d"+
		"\u0001\u0000\u0000\u0000\u009d\u00a0\u0005\n\u0000\u0000\u009e\u00a0\u0005"+
		"\r\u0000\u0000\u009f\u009b\u0001\u0000\u0000\u0000\u009f\u009e\u0001\u0000"+
		"\u0000\u0000\u00a0\u00a1\u0001\u0000\u0000\u0000\u00a1\u009f\u0001\u0000"+
		"\u0000\u0000\u00a1\u00a2\u0001\u0000\u0000\u0000\u00a2\u00a3\u0001\u0000"+
		"\u0000\u0000\u00a3\u00a4\u0006\u0016\u0000\u0000\u00a4.\u0001\u0000\u0000"+
		"\u0000\u00a5\u00a7\u0007\u0004\u0000\u0000\u00a6\u00a5\u0001\u0000\u0000"+
		"\u0000\u00a7\u00a8\u0001\u0000\u0000\u0000\u00a8\u00a6\u0001\u0000\u0000"+
		"\u0000\u00a8\u00a9\u0001\u0000\u0000\u0000\u00a9\u00aa\u0001\u0000\u0000"+
		"\u0000\u00aa\u00ab\u0006\u0017\u0000\u0000\u00ab0\u0001\u0000\u0000\u0000"+
		"\u00ac\u00b0\u0005#\u0000\u0000\u00ad\u00af\b\u0005\u0000\u0000\u00ae"+
		"\u00ad\u0001\u0000\u0000\u0000\u00af\u00b2\u0001\u0000\u0000\u0000\u00b0"+
		"\u00ae\u0001\u0000\u0000\u0000\u00b0\u00b1\u0001\u0000\u0000\u0000\u00b1"+
		"\u00b3\u0001\u0000\u0000\u0000\u00b2\u00b0\u0001\u0000\u0000\u0000\u00b3"+
		"\u00b4\u0006\u0018\u0000\u0000\u00b42\u0001\u0000\u0000\u0000\f\u0000"+
		"uz\u0080\u0082\u008b\u0092\u009b\u009f\u00a1\u00a8\u00b0\u0001\u0006\u0000"+
		"\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}